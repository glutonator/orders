{
    "swagger": "2.0",
    "info": {
        "description": ".",
        "version": "API 4",
        "title": "Mikroserwis zarządzania udziałem w wydarzeniach - REST API",
        "contact": {
            "name": "Filip Lewczak"
        },
        "license": {
            "name": "API License URL"
        }
    },
    "host": "localhost:8181",
    "basePath": "/",
    "tags": [
        {
            "name": "main-controller",
            "description": "Main Controller"
        }
    ],
    "paths": {
        "/orders/all_orders": {
            "get": {
                "tags": [
                    "main-controller"
                ],
                "summary": "getAllOrders",
                "operationId": "getAllOrdersUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Iterable«OrderObjcet»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/orders/event/delete/{eventid}": {
            "get": {
                "tags": [
                    "main-controller"
                ],
                "summary": "cancelEvent",
                "operationId": "cancelEventUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "eventid",
                        "in": "path",
                        "description": "eventid",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/orders/event/{eventid}": {
            "get": {
                "tags": [
                    "main-controller"
                ],
                "summary": "showAllTicketsFromEvent",
                "operationId": "showAllTicketsFromEventUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "eventid",
                        "in": "path",
                        "description": "eventid",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Booking"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/orders/new_order": {
            "post": {
                "tags": [
                    "main-controller"
                ],
                "summary": "createNewRelations",
                "operationId": "createNewRelationsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "orderObjcet",
                        "description": "orderObjcet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderObjcet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CreateNewRelationsRES"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/orders/new_order_old": {
            "post": {
                "tags": [
                    "main-controller"
                ],
                "summary": "addNewOrder",
                "operationId": "addNewOrderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "iduser",
                        "in": "query",
                        "description": "iduser",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "idevent",
                        "in": "query",
                        "description": "idevent",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "idticket",
                        "in": "query",
                        "description": "idticket",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/orders/resignation/{orderid}": {
            "put": {
                "tags": [
                    "main-controller"
                ],
                "summary": "makeResignation",
                "operationId": "makeResignationUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "orderid",
                        "in": "path",
                        "description": "orderid",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MakeResignationRES"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/orders/user/{userid}": {
            "get": {
                "tags": [
                    "main-controller"
                ],
                "summary": "showUserTickets",
                "operationId": "showUserTicketsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "description": "userid",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Iterable«OrderObjcet»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/orders/{order}": {
            "get": {
                "tags": [
                    "main-controller"
                ],
                "summary": "getOrderDetails",
                "operationId": "getOrderDetailsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "order",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderObjcet"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Booking": {
            "type": "object",
            "properties": {
                "eventID": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderObjcet": {
                    "$ref": "#/definitions/OrderObjcet"
                },
                "relationCreationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "relationID": {
                    "type": "integer",
                    "format": "int64"
                },
                "relationModificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "relationStatus": {
                    "type": "boolean"
                },
                "ticketID": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CreateNewRelationsRES": {
            "type": "object",
            "properties": {
                "orderid": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "Iterable«OrderObjcet»": {
            "type": "object"
        },
        "MakeResignationRES": {
            "type": "object",
            "properties": {
                "orderID": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentOrder": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "OrderObjcet": {
            "type": "object",
            "properties": {
                "bookings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Booking"
                    }
                },
                "orderID": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentOrder": {
                    "type": "integer",
                    "format": "int64"
                },
                "userID": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        }
    }
}