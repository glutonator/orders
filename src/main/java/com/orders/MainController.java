package com.orders;

import org.aspectj.weaver.ast.Or;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

//import com.orders.User;
//import com.orders.UserRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/demo") // This means URL's start with /demo (after Application path)
public class MainController {
//    @Autowired // This means to get the bean called userRepository
//    // Which is auto-generated by Spring, we will use it to handle the data
//    private UserRepository userRepository;
//
//    @GetMapping(path="/add") // Map ONLY GET Requests
//    public @ResponseBody String addNewUser (@RequestParam String name
//            , @RequestParam String email) {
//        // @ResponseBody means the returned String is the response, not a view name
//        // @RequestParam means it is a parameter from the GET or POST request
//
//        User n = new User();
//        n.setName(name);
//        n.setEmail(email);
//        userRepository.save(n);
//        return "Saved";
//    }
//
//    @GetMapping(path="/all")
//    public @ResponseBody Iterable<User> getAllUsers() {
//        // This returns a JSON or XML with the users
//        return userRepository.findAll();
//    }
//
//    @Autowired
//    private OrderObjcetRepository orderObjcetRepository;
//
//
//    // get order with specific idorder
//    //@GetMapping(path = "/orders/{order}") // Map ONLY GET Requests
//    @RequestMapping(method = RequestMethod.GET,value ="/orders/{order}" )
//    public @ResponseBody
//    Optional<OrderObjcet> getOrderDetails(@PathVariable("order") Integer idorder) {
//        return orderObjcetRepository.findById(idorder);
//    }
//
//    // create order with specific iduser,idevent,idticket
//    @RequestMapping(method = RequestMethod.POST,value ="/orders/new_order")
//    public @ResponseBody
//    String addNewOrder(@RequestParam Integer iduser,@RequestParam Integer idevent,@RequestParam Integer idticket) {
//        OrderObjcet o = new OrderObjcet();
//        o.setIdUser(iduser);
//        o.setIdEvent(idevent);
//        o.setIdTicket(idticket);
//        orderObjcetRepository.save(o);
//        return "Saved";
//    }
//
//    // delete order with specific idorder
//    @RequestMapping(method = RequestMethod.DELETE,path ="/orders/delete_order/{order}")
//    public @ResponseBody
//    void deleteNewOrder(@PathVariable("order") Integer idorder) {
//        orderObjcetRepository.deleteById(idorder);
//    }
//
//    // get all orders
//    @RequestMapping(method = RequestMethod.GET,value ="/orders/all_orders" )
//    public @ResponseBody
//    Iterable<OrderObjcet> getAllOrders() {
//        return orderObjcetRepository.findAll();
//    }
//
////    // get all orders for specific iduser
////    @RequestMapping(method = RequestMethod.GET,value ="/orders/{user}/all_orders" )
////    public @ResponseBody
////    Iterable<OrderObjcet> getAllOrdersForUser(@PathVariable("user") Integer iduser) {
////        return orderObjcetRepository.
////    }
//
//
//
//
//
//    @GetMapping(path = "/add2") // Map ONLY GET Requests
//    public @ResponseBody
//    String addNewOrder(@RequestParam Integer iduser) {
//        // @ResponseBody means the returned String is the response, not a view name
//        // @RequestParam means it is a parameter from the GET or POST request
//
//        OrderObjcet o = new OrderObjcet();
//        o.setIdUser((Integer)77);
//        o.setIdEvent((Integer)56);
//        o.setIdTicket((Integer)78);
//
//        orderObjcetRepository.save(o);
//        return "Saved";
//    }
//    @GetMapping(path = "/else")
//    public @ResponseBody
//    Iterable<OrderObjcet> getAllOrders2() {
//        return orderObjcetRepository.findAll();
//    }
}